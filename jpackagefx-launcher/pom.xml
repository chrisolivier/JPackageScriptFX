<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.dlsc.jpackagefx</groupId>
	<artifactId>jpackagefx-launcher</artifactId>
	<version>1.0.4-SNAPSHOT</version>

	<name>jpackagefx-launcher</name>

	<properties>
		<javafx.version>18</javafx.version>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		
		<exec.maven.plugin.version>1.6.0</exec.maven.plugin.version>
		<fxlauncher.version>1.0.0-SNAPSHOT</fxlauncher.version>

		<!-- tornado properties -->
		<!-- Installer Filename without suffix -->
		<app.name>JPackageScriptFX</app.name>

		<!-- The Application vendor used by javapackager -->
		<app.vendor>Acme Inc.</app.vendor>

		<!-- The Application version used by javapackager -->
		<app.version>1.0.0</app.version>

		<!-- Base URL where you will host the application artifacts -->
		<app.url>http://staging.colhome.org:8080/</app.url>

		<!-- The app and launcher will be assembled in this folder -->
		<app.dir>target/libs</app.dir>

		<!-- Native installers will be built in this folder -->
		<app.installerdir>target/installer</app.installerdir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.colhome</groupId>
			<artifactId>fxlauncher</artifactId>
			<version>${fxlauncher.version}</version>
			<!-- this package is not usefull at rune time, we remove it from the native launcher -->
			<exclusions>
				<exclusion>
					<groupId>com.google.auto.service</groupId>
					<artifactId>auto-service-annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-web</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
				<configuration>
					<release>17</release>
				</configuration>
			</plugin>
			<!-- Copy all depndencies in target/libs -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${app.dir}</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeScope>compile</includeScope>
							<includeScope>runtime</includeScope>
							<excludeScope>provided</excludeScope>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Get the app.xml from remote app, the app has to be built before this launcher -->
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>1.6.8</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>wget</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<url>${app.url}app.xml</url>
					<outputFileName>app.xml</outputFileName>
					<outputDirectory>${app.dir}</outputDirectory>
				</configuration>
			</plugin>
			<!-- Embed app.xml inside fxlauncher.xml so we don't need to reference app.xml to start the app -->
			<plugin>
				<artifactId>exec-maven-plugin</artifactId>
				<groupId>org.codehaus.mojo</groupId>
				<version>${exec.maven.plugin.version}</version>
				<executions>
					<execution>
						<id>embed-manifest-in-launcher</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>jar</executable>
							<workingDirectory>${app.dir}</workingDirectory>
							<arguments>
								<argument>uf</argument>
								<argument>fxlauncher.jar</argument>
								<argument>app.xml</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- Native launcher Build																-->
	<!-- The launcher need to be built once for each os 									-->
	<!-- No need to build it each time as the launcher will receive update automatically 	-->
	<profiles>
		<profile>
			<id>build-mac</id>

			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<version>${exec.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>Build Native Mac App</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<workingDirectory>${project.basedir}</workingDirectory>
							<executable>./build_app_mac.sh</executable>
							<environmentVariables>
								<JAVA_VERSION>17</JAVA_VERSION>
								<INSTALLER_TYPE>pkg</INSTALLER_TYPE>
								<APP_NAME>${app.name}</APP_NAME>
								<APP_DIR>${app.dir}</APP_DIR>
								<INSTALL_DIR>${app.installerdir}</INSTALL_DIR>
								<APP_ICON>src/main/logo/macosx/duke.icns</APP_ICON>
								<APP_VERSION>${app.version}</APP_VERSION>
								<PROJECT_VERSION>${project.version}</PROJECT_VERSION>
								<VENDOR>${app.vendor}</VENDOR>
								<PKG_IDENTIFIER>com.acme.app</PKG_IDENTIFIER>
								<PKG_NAME>ACME</PKG_NAME>
							</environmentVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>build-linux</id>

			<activation>
				<os>
					<family>linux</family>
				</os>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<version>${exec.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>Build Native Linux App</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<workingDirectory>${project.basedir}</workingDirectory>
							<executable>./build_app_linux.sh</executable>
							<environmentVariables>
								<JAVA_VERSION>17</JAVA_VERSION>
								<INSTALLER_TYPE>app-image</INSTALLER_TYPE>
								<APP_NAME>${app.name}</APP_NAME>
								<APP_DIR>${app.dir}</APP_DIR>
								<INSTALL_DIR>${app.installerdir}</INSTALL_DIR>
								<APP_ICON>src/main/logo/linux/duke.png</APP_ICON>
								<APP_VERSION>${app.version}</APP_VERSION>
								<PROJECT_VERSION>${project.version}</PROJECT_VERSION>
								<VENDOR>${app.vendor}</VENDOR>
							</environmentVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>build-windows</id>

			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<version>${exec.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>Build Native Windows App</id>
								<phase>install</phase>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<workingDirectory>${project.basedir}</workingDirectory>
							<executable>build_app_windows.bat</executable>
							<environmentVariables>
								<JAVA_VERSION>17</JAVA_VERSION>
								<INSTALLER_TYPE>msi</INSTALLER_TYPE>
								<APP_NAME>${app.name}</APP_NAME>
								<APP_DIR>${app.dir}</APP_DIR>
								<INSTALL_DIR>${app.installerdir}</INSTALL_DIR>
								<APP_ICON>src/main/logo/windows/duke.ico</APP_ICON>
								<APP_VERSION>${app.version}</APP_VERSION>
								<PROJECT_VERSION>${project.version}</PROJECT_VERSION>
								<VENDOR>${app.vendor}</VENDOR>
							</environmentVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
